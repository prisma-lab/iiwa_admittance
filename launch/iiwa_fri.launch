<?xml version="1.0"?>
<launch>

  <arg name="hardware_interface" default="hardware_interface/PositionJointInterface"/> 
  <arg name="robot_name" default="iiwa"/>
  <arg name="origin_xyz" default="'0 0 0'"/> <!-- Note the syntax to pass a vector -->
  <arg name="origin_rpy" default="'0 0 0'"/>
  <arg name="model" default="iiwa7" />
  <arg name="simulation" default="false"/>

   
  <group if="$(arg simulation)">
    <node name="netft_node" pkg="netft_utils" type="netft_node" args="--address 172.31.1.82"/>
    <include file="$(find lbr_iiwa_description)/launch/gazebo_ctrl.launch" />
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" >
      <remap from="joint_states" to="iiwa/joint_states" />
    </node>
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find kuka_control)/config.rviz" />
    <arg name="node_start_delay" default="5.0" />  
    <node pkg="rosservice" type="rosservice" name="gazebo_unpause" args="call gazebo/unpause_physics" launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' " />
  </group>


  <group unless="$(arg simulation)">
    <rosparam>
      use_sim_time: false
   </rosparam>
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find kuka_control)/urdf/iiwa7.urdf.xacro' hardware_interface:=$(arg hardware_interface) robot_name:=$(arg robot_name) origin_xyz:=$(arg origin_xyz) origin_rpy:=$(arg origin_rpy)"/>

    <node name="rosToFri" pkg="ros_fri_interface" type="rosToFri" output="screen" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" >
      <remap from="joint_states" to="iiwa/joint_states" />
    </node>

    <node name="netft_node" pkg="netft_utils" type="netft_node" args="--address 172.31.1.82"/>

    <!-- <node type="rviz" name="rviz" pkg="rviz" args="-d $(find kuka_control)/config.rviz" /> -->
  </group>

</launch>
